# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-01-27 11:51
from __future__ import unicode_literals

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ArticleContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contents', models.TextField(max_length=1)),
            ],
            options={
                'db_table': 'ArticleContent',
                'verbose_name': 'Article Content',
            },
        ),
        migrations.CreateModel(
            name='ArticleDownload',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('local_file_path', models.CharField(max_length=250)),
                ('article_download_created_date', models.DateTimeField(default=datetime.datetime.now)),
                ('article_download_last_updated_date', models.DateTimeField(default=datetime.datetime.now)),
            ],
            options={
                'db_table': 'ArticleDownload',
                'verbose_name': 'Article Download',
            },
        ),
        migrations.CreateModel(
            name='ArticleParsed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('article_title', models.CharField(max_length=250)),
                ('url', models.CharField(max_length=250)),
                ('published_date', models.DateTimeField(default=datetime.datetime.now)),
                ('created_date', models.DateTimeField(default=datetime.datetime.now)),
                ('last_updated_date', models.DateTimeField(default=datetime.datetime.now)),
                ('unique', models.CharField(max_length=250)),
                ('article_download', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='newsdb.ArticleDownload')),
            ],
            options={
                'db_table': 'ArticleParsed',
                'verbose_name': 'Article Parsed',
            },
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author_name', models.CharField(max_length=250)),
                ('article_parsed', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='newsdb.ArticleParsed')),
            ],
            options={
                'db_table': 'Author',
                'verbose_name': 'Author',
            },
        ),
        migrations.CreateModel(
            name='MapUnresolvedResolvedLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'MapUnresolvedResolvedLocation',
                'verbose_name': 'Map Unresolved Resolved Location',
            },
        ),
        migrations.CreateModel(
            name='MapUnresolvedResolvedNewsType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'MapUnresolvedResolvedNewsType',
                'verbose_name': 'Map Unresolved Resolved News Type',
            },
        ),
        migrations.CreateModel(
            name='ResolvedLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resolved_location_name', models.CharField(max_length=250, unique=True)),
            ],
            options={
                'db_table': 'ResolvedLocation',
                'verbose_name': 'Resolved Location',
            },
        ),
        migrations.CreateModel(
            name='ResolvedNewsType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resolved_news_type_name', models.CharField(max_length=250, unique=True)),
            ],
            options={
                'db_table': 'ResolvedNewsType',
                'verbose_name': 'Resolved News Type',
            },
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_name', models.CharField(max_length=250, unique=True)),
                ('source_url', models.CharField(max_length=250)),
            ],
            options={
                'db_table': 'Source',
                'verbose_name': 'Source',
            },
        ),
        migrations.CreateModel(
            name='UnresolvedLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unresolved_location_name', models.CharField(max_length=250)),
            ],
            options={
                'db_table': 'UnresolvedLocation',
                'verbose_name': 'UnResolved Location',
            },
        ),
        migrations.CreateModel(
            name='UnresolvedNewsType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unresolved_news_type_name', models.CharField(max_length=250)),
            ],
            options={
                'db_table': 'UnResolvedNewsType',
                'verbose_name': 'UnResolved News Type',
            },
        ),
        migrations.AddField(
            model_name='mapunresolvedresolvednewstype',
            name='resolved_news_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='newsdb.ResolvedNewsType'),
        ),
        migrations.AddField(
            model_name='mapunresolvedresolvednewstype',
            name='unresolved_news_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='newsdb.UnresolvedNewsType', unique=True),
        ),
        migrations.AddField(
            model_name='mapunresolvedresolvedlocation',
            name='resolved_location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='newsdb.ResolvedLocation'),
        ),
        migrations.AddField(
            model_name='mapunresolvedresolvedlocation',
            name='unresolved_location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='newsdb.UnresolvedLocation', unique=True),
        ),
        migrations.AddField(
            model_name='articleparsed',
            name='source',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='newsdb.Source'),
        ),
        migrations.AddField(
            model_name='articleparsed',
            name='unresolved_location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='newsdb.UnresolvedLocation'),
        ),
        migrations.AddField(
            model_name='articleparsed',
            name='unresolved_news_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='newsdb.UnresolvedNewsType'),
        ),
        migrations.AddField(
            model_name='articlecontent',
            name='article_parsed',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='newsdb.ArticleParsed'),
        ),
    ]
